#!/usr/bin/env python3

"""
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.

For more details, review a copy of the GNU General Public License at <https://www.gnu.org/licenses/>.

Created by: Leandro Fernandes Correia
GitHub: https://github.com/leo-fcorreia
Website: https://reptsec.com
Year: 2025

Description:
This script was developed to enhance the detection of events generated by syslog messages 
from the IDS (Intrusion Detection Service) of the Cisco ASA Firewall.

Disclaimer:
I am not responsible for the execution of these scripts, as they serve as a reference 
for improving detections. I highly recommend reviewing your rules and decoders in a 
test environment before applying them to production.

References:
- Wazuh Regex Documentation:
  https://documentation.wazuh.com/current/user-manual/ruleset/ruleset-xml-syntax/regex.html

- Cisco ASA Syslog Messages 4-4000nn:
  https://www.cisco.com/c/en/us/td/docs/security/asa/syslog/b_syslog/syslog-messages-400000-to-450001.html#con_4772079
"""

import os
import shutil
import re

# File definition
FILE = "/var/ossec/ruleset/decoders/0064-cisco-asa_decoders.xml"
BACKUP_FILE = FILE + ".bak"

# Check if the file exists
if not os.path.isfile(FILE):
    print(f"Error: The file {FILE} was not found.")
    exit(1)

# Create a backup of the original file
shutil.copy(FILE, BACKUP_FILE)

# Define search and replacement patterns
old_block_pattern = re.compile(
    r'<!--\n%ASA-1-106022: .*?</decoder>',
    re.DOTALL
)

new_block = r"""
<!-- Cisco ASA IDS Signatures
%ASA-4-400014: IDS:2004 ICMP echo request from 192.168.1.1 to 10.1.1.1 on interface inside
-->

<decoder name="cisco-asa-ids">
    <parent>cisco-asa</parent>
    <prematch offset="after_parent">4-4000(\\d+)</prematch>
    <regex offset="after_parent">(\\w+): (\\.+) from (\\d+.\\d+.\\d+.\\d+) to (\\d+.\\d+.\\d+.\\d+) on interface (\\w+)</regex>
    <order>id, action, srcip, dstip, interface</order>
</decoder>

<!--
%ASA-1-106022: Deny protocol connection spoof from 192.168.0.1 to 192.168.0.2 on interface interface_name.
-->
<decoder name="cisco-asa-attacks">
  <parent>cisco-asa</parent>
  <prematch offset="after_parent">1-106021|1-106022</prematch>
  <regex offset="after_parent">(\\w+): \\.+ from (\\S+)</regex>
  <order>id, srcip</order>
</decoder>"""

with open(FILE, "r", encoding="utf-8") as f:
    content = f.read()

updated_content = old_block_pattern.sub(new_block, content)

# Write the new version of the file
with open(FILE, "w", encoding="utf-8") as f:
    f.write(updated_content)

# Verify if the changes were applied correctly
if "<decoder name=\"cisco-asa-ids\">" in updated_content and "1-106021|1-106022|4-4000" not in updated_content:
    print("Changes successfully applied!")
else:
    print("Error modifying the file. Please check manually.")
    exit(1)